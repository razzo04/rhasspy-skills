FROM debian:stable-slim as builder

ENV MOSQUITTO_VERSION=1.6.10
ENV PLUGIN_VERSION=1.3.3
ENV GO_VERSION=1.15.8

WORKDIR /app

RUN apt-get update && apt-get install -y libwebsockets8 libwebsockets-dev libc-ares2 libc-ares-dev openssl uuid uuid-dev wget build-essential git
RUN mkdir -p mosquitto/auth mosquitto/conf.d

RUN wget http://mosquitto.org/files/source/mosquitto-${MOSQUITTO_VERSION}.tar.gz
RUN tar xzvf mosquitto-${MOSQUITTO_VERSION}.tar.gz && rm mosquitto-${MOSQUITTO_VERSION}.tar.gz


RUN cd mosquitto-${MOSQUITTO_VERSION} && make WITH_WEBSOCKETS=no && make install && cd ..


RUN export GO_ARCH=$(uname -m | sed -es/x86_64/amd64/ -es/armv7l/armv6l/ -es/aarch64/arm64/) && \
    wget https://dl.google.com/go/go${GO_VERSION}.linux-${GO_ARCH}.tar.gz && \
    tar -C /usr/local -xzf go${GO_VERSION}.linux-${GO_ARCH}.tar.gz && \
    export PATH=$PATH:/usr/local/go/bin && \
    go version && \
    rm go${GO_VERSION}.linux-${GO_ARCH}.tar.gz


RUN mkdir mosquitto-go-auth && \
    cd mosquitto-go-auth && \
    git clone https://github.com/iegomez/mosquitto-go-auth.git . && \
    export PATH=$PATH:/usr/local/go/bin && \
    export CGO_CFLAGS="-I/usr/local/include -fPIC" && \
    export CGO_LDFLAGS="-shared" && \
    make

FROM python:3.8.10-slim-buster

RUN apt-get update && apt-get install --no-install-recommends -y uuid gosu && apt-get clean autoclean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /var/lib/mosquitto /var/log/mosquitto /etc/mosquitto
RUN groupadd -r mosquitto \
    && useradd -s /sbin/nologin mosquitto -g mosquitto -d /var/lib/mosquitto \
    && chown -R mosquitto:mosquitto /var/log/mosquitto/ \
    && chown -R mosquitto:mosquitto /var/lib/mosquitto/ \
    && chown -R mosquitto:mosquitto /etc/mosquitto


COPY --from=builder /app/mosquitto/ /mosquitto/
COPY --from=builder /app/mosquitto-go-auth/pw /mosquitto/pw
COPY --from=builder /app/mosquitto-go-auth/go-auth.so /mosquitto/go-auth.so
COPY --from=builder /usr/local/sbin/mosquitto /usr/sbin/mosquitto

EXPOSE 1883
EXPOSE 9090
ENV YARL_NO_EXTENSIONS=1

RUN pip3 install --no-cache-dir setuptools wheel
COPY requirements.txt requirements.txt
RUN pip3 install --no-cache-dir --no-binary pydantic -r requirements.txt
RUN pip3 uninstall --yes setuptools wheel
COPY bin/run.sh run.sh
COPY app app
RUN groupadd -r rhasspy-skills \
    && mkdir data \
    && useradd -s /sbin/nologin rhasspy-skills -g rhasspy-skills \
    && chown -R rhasspy-skills:rhasspy-skills /data \
    && chgrp -R rhasspy-skills /app  && chmod 750 -R /app

ENTRYPOINT [ "bash", "run.sh"]
